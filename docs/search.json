[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solutions to Statistical Computing with R (2ed) by Maria Rizzo",
    "section": "",
    "text": "Welcome\n\n\n\n\n\n\nWarning\n\n\n\nI have just begun to work through Rizzo’s book. This set of solutions is decidedly incomplete. Every aspect of my work is subject to change. Many things might be incorrect. Are you sure you want to read this yet?\n\n\n\n\nThis is a website that provides solutions to the exercises from Maria Rizzo’s book Statistical Computing in R (2ed).",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "chapters/01_intro.html",
    "href": "chapters/01_intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Q1.1\nGenerate a random sample \\(x_1, \\ldots, x_{100}\\) of data from the \\(t_4\\) (df=4) distribution using the rt function. Use the MASS::truehist function to display a probability histogram of the sample.\n\nset.seed(1234)\nx &lt;- rt(n=100, df=4)\nMASS::truehist(x, las=1, col=\"#118ab2\", border=\"grey80\", nbins=20)\n\n\n\n\n\n\n\n\n\n\nQ1.2\nAdd the \\(t_4\\) density curve (dt) to your histogram in Exercise 1.1 using the curve function with add=TRUE.\n\nMASS::truehist(x, las=1, col=\"#118ab2\", border=\"grey80\", nbins=20)\ncurve(dt(x, df=4), from=-4, to=4, add=T, type=\"l\")\n\n\n\n\n\n\n\n\n\n\nQ1.3\nAdd an estimated density curve to your histogram in Exercise 1.2 using density.\n\nMASS::truehist(x, las=1, col=\"#118ab2\", border=\"grey80\", nbins=20)\ncurve(dt(x, df=4), from=-4, to=4, add=T, type=\"l\")\nlines(density(x), col=\"firebrick\", lwd=2)\n\n\n\n\n\n\n\n\n\n\nQ1.4a\nWrite an R function f in R to implement the function \\(f(x) = (x-a)/b\\) that will transform an imput vector \\(x\\) and return the result. The function should take three input arguments: x, a, and b.\n\nf &lt;- function(x, a, b) (x-a)/b\n\n\n\nQ1.4b\nTo transform \\(x\\) to the interval \\([0,1]\\) we subtract the minimum value and divice by the range: y &lt;- f(x, a=min(x), b=max(x)-min(x)). Generate a random sample of a Normal(\\(\\mu=2\\), \\(\\sigma=2\\)) data using rnorm and use your function f to transform this sample to the interval \\([0,1]\\). Print a summary of both the sample x and the transformed sample y to check the result.\n\nset.seed(1234)\nx &lt;- rnorm(100, mean=2, sd=2)\ny &lt;- f(x, min(x), max(x)-min(x))\nsummary(data.frame(x=x, y=y))\n\n       x                 y         \n Min.   :-2.6914   Min.   :0.0000  \n 1st Qu.: 0.2093   1st Qu.:0.2963  \n Median : 1.2307   Median :0.4007  \n Mean   : 1.6865   Mean   :0.4472  \n 3rd Qu.: 2.9424   3rd Qu.:0.5755  \n Max.   : 7.0980   Max.   :1.0000  \n\n\n\n\nQ1.5\nRefer to Exercise 1.4. Suppose that we want to transform the x sample so that it has mean zero and standard deviation one (studentize the sample). That is, we want \\(z_i - (x_i-\\bar{x})/s\\) for \\(i=1,\\ldots,n\\), where \\(s\\) is that standard deviation of the sample. Using your function f this is z &lt;- f(x, a=mean(x), b=sd(x)). Display a summary and histogram of the studentized sample z. It should be centered exactly at zero. Use sd(z) to check that the studentized sample has standard deviation exactly 1.0.\n\nz &lt;- f(x, a=mean(x), b=sd(x))\nround(mean(z),10); round(sd(z),10)\n\n[1] 0\n\n\n[1] 1\n\n\n\n\nQ1.6\nUsing your function f of Exercise 1.4, center and scale your Normal(\\(\\mu=2\\), \\(\\sigma=2\\)) sample by subtracting the sample median and dividing by the sample interquartile range (IQR).\n\ny &lt;- f(x, a=median(x), b=IQR(x))\nplot(z, y, pch=20)\n\n\n\n\n\n\n\n\n\n\nQ1.7\nRefer to Example 1.14 where we displayed an arrach of scatterplots using ggplot with facet_wrap. One of the variables in the mpg data is drv, a characer vector indicating whether the vehicle is front-wheel drive, real-wheel drive, or four-wheel drive. Add color=drv in aes: aes(displ, hwy, color=drv) and display the revised plot. Your scatterplots should now have automatically generated a legend for drv color.\n\nlibrary(ggplot2)\nmpg |&gt;\n    ggplot() + \n    geom_point(aes(displ, hwy, color=drv)) + \n    facet_wrap(~class)\n\n\n\n\n\n\n\n\n\n\nQ1.8\nThis exercise is intented to serve as an introduction to report writing with R Markdown. Install the knitr package if it is not installed. Create an html report using R Markdown and knitr in RStudio. The report whould include the code and output of Examples 1.12 and 1.14 with appropriate headings and a brief explanation o feach example.\nSolution Omitted.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/03_genrv.html",
    "href": "chapters/03_genrv.html",
    "title": "2  Probability and Statistics",
    "section": "",
    "text": "Q2.1\nWrite a function that will generate and return a random sample of size \\(n\\) from the two-parameter exponential distribution Exp(\\(\\lambda\\),\\(eta\\)) for arbitrary \\(n\\), \\(\\lambda\\), and \\(\\eta\\). (See Examples 2.3 and 2.6.) Generate a large sample from Exp(\\(\\lambda\\),\\(eta\\)) and compare your sample quantiles with the theoretical quantiles.\n\n\nQ2.2\n\n\nQ2.3\n\n\nQ2.4\n\n\nQ2.5\n\n\nQ2.6\n\n\nQ2.7\n\n\nQ2.8\n\n\nQ2.9\n\n\nQ2.10\n\n\nQ2.11\n\n\nQ2.12\n\n\nQ2.13\n\n\nQ2.14\n\n\nQ2.15\n\n\nQ2.16\n\n\nQ2.17\n\n\nQ2.18",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Probability and Statistics</span>"
    ]
  }
]